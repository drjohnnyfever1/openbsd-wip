$OpenBSD$

Index: gfx/skia/trunk/src/opts/opts_check_x86.cpp
--- gfx/skia/trunk/src/opts/opts_check_x86.cpp.orig
+++ gfx/skia/trunk/src/opts/opts_check_x86.cpp
@@ -7,15 +7,12 @@
 
 #include "SkBitmapFilter_opts_SSE2.h"
 #include "SkBitmapProcState_opts_SSE2.h"
-#include "SkBitmapProcState_opts_SSSE3.h"
 #include "SkBitmapScaler.h"
 #include "SkBlitMask.h"
 #include "SkBlitRect_opts_SSE2.h"
 #include "SkBlitRow.h"
 #include "SkBlitRow_opts_SSE2.h"
-#include "SkBlitRow_opts_SSE4.h"
 #include "SkBlurImage_opts_SSE2.h"
-#include "SkBlurImage_opts_SSE4.h"
 #include "SkMorphology_opts.h"
 #include "SkMorphology_opts_SSE2.h"
 #include "SkRTConf.h"
@@ -145,25 +142,13 @@ void SkBitmapProcState::platformProcs() {
 
     /* Check fSampleProc32 */
     if (fSampleProc32 == S32_opaque_D32_filter_DX) {
-        if (supports_simd(SK_CPU_SSE_LEVEL_SSSE3)) {
-            fSampleProc32 = S32_opaque_D32_filter_DX_SSSE3;
-        } else {
-            fSampleProc32 = S32_opaque_D32_filter_DX_SSE2;
-        }
+       fSampleProc32 = S32_opaque_D32_filter_DX_SSE2;
     } else if (fSampleProc32 == S32_opaque_D32_filter_DXDY) {
-        if (supports_simd(SK_CPU_SSE_LEVEL_SSSE3)) {
-            fSampleProc32 = S32_opaque_D32_filter_DXDY_SSSE3;
-        }
+       ;
     } else if (fSampleProc32 == S32_alpha_D32_filter_DX) {
-        if (supports_simd(SK_CPU_SSE_LEVEL_SSSE3)) {
-            fSampleProc32 = S32_alpha_D32_filter_DX_SSSE3;
-        } else {
-            fSampleProc32 = S32_alpha_D32_filter_DX_SSE2;
-        }
+       fSampleProc32 = S32_alpha_D32_filter_DX_SSE2;
     } else if (fSampleProc32 == S32_alpha_D32_filter_DXDY) {
-        if (supports_simd(SK_CPU_SSE_LEVEL_SSSE3)) {
-            fSampleProc32 = S32_alpha_D32_filter_DXDY_SSSE3;
-        }
+       ;
     }
 
     /* Check fSampleProc16 */
@@ -218,21 +203,7 @@ static SkBlitRow::Proc32 platform_32_procs_SSE2[] = {
     S32A_Blend_BlitRow32_SSE2,          // S32A_Blend,
 };
 
-#if defined(SK_ATT_ASM_SUPPORTED)
-static SkBlitRow::Proc32 platform_32_procs_SSE4[] = {
-    NULL,                               // S32_Opaque,
-    S32_Blend_BlitRow32_SSE2,           // S32_Blend,
-    S32A_Opaque_BlitRow32_SSE4_asm,     // S32A_Opaque
-    S32A_Blend_BlitRow32_SSE2,          // S32A_Blend,
-};
-#endif
-
 SkBlitRow::Proc32 SkBlitRow::PlatformProcs32(unsigned flags) {
-#if defined(SK_ATT_ASM_SUPPORTED)
-    if (supports_simd(SK_CPU_SSE_LEVEL_SSE41)) {
-        return platform_32_procs_SSE4[flags];
-    } else
-#endif
     if (supports_simd(SK_CPU_SSE_LEVEL_SSE2)) {
         return platform_32_procs_SSE2[flags];
     } else {
@@ -359,10 +330,7 @@ bool SkBoxBlurGetPlatformProcs(SkBoxBlurProc* boxBlurX
 #ifdef SK_DISABLE_BLUR_DIVISION_OPTIMIZATION
     return false;
 #else
-    if (supports_simd(SK_CPU_SSE_LEVEL_SSE41)) {
-        return SkBoxBlurGetPlatformProcs_SSE4(boxBlurX, boxBlurY, boxBlurXY, boxBlurYX);
-    }
-    else if (supports_simd(SK_CPU_SSE_LEVEL_SSE2)) {
+    if (supports_simd(SK_CPU_SSE_LEVEL_SSE2)) {
         return SkBoxBlurGetPlatformProcs_SSE2(boxBlurX, boxBlurY, boxBlurXY, boxBlurYX);
     }
     return false;
